import { CSSProperties } from 'react';
import type { MantineStyleProp } from '@mantine/core/lib/core/Box';
import { FactoryPayload } from '@mantine/core/lib/core/factory';
import { PartialVarsResolver, VarsResolver } from '@mantine/core/lib/core/styles-api/create-vars-resolver/create-vars-resolver';
import { ClassNames, ClassNamesArray, GetStylesApiOptions, Styles } from '@mantine/core/lib/core/styles-api/styles-api.types';
export interface UseStylesInput<Payload extends FactoryPayload> {
    name: string | (string | undefined)[];
    classes: Payload['stylesNames'] extends string ? Record<string, string> : never;
    props: Payload['props'];
    stylesCtx?: Payload['ctx'];
    className?: string;
    style?: MantineStyleProp;
    rootSelector?: Payload['stylesNames'];
    unstyled?: boolean;
    classNames?: ClassNames<Payload> | ClassNamesArray<Payload>;
    styles?: Styles<Payload>;
    vars?: PartialVarsResolver<Payload>;
    varsResolver?: VarsResolver<Payload>;
}
export type GetStylesApi<Payload extends FactoryPayload> = (selector: NonNullable<Payload['stylesNames']>, options?: GetStylesApiOptions) => {
    className: string;
    style: CSSProperties;
};
export declare function useStyles<Payload extends FactoryPayload>({ name, classes, props, stylesCtx, className, style, rootSelector, unstyled, classNames, styles, vars, varsResolver, }: UseStylesInput<Payload>): GetStylesApi<Payload>;
